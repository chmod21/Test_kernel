menu "Android"

config ANDROID
	bool "Android Drivers"
	default N
	---help---
	  Enable support for various drivers needed on the Android platform

if ANDROID

config ANDROID_BINDER_IPC
	bool "Android Binder IPC Driver"
	default n

config ANDROID_LOGGER
	tristate "Android log driver"
	default n

config ANDROID_RAM_CONSOLE
	bool "Android RAM buffer console"
	default n

config ANDROID_RAM_CONSOLE_ENABLE_VERBOSE
	bool "Enable verbose console messages on Android RAM console"
	default y
	depends on ANDROID_RAM_CONSOLE

menuconfig ANDROID_RAM_CONSOLE_ERROR_CORRECTION
	bool "Android RAM Console Enable error correction"
	default n
	depends on ANDROID_RAM_CONSOLE
	depends on !ANDROID_RAM_CONSOLE_EARLY_INIT
	select REED_SOLOMON
	select REED_SOLOMON_ENC8
	select REED_SOLOMON_DEC8

if ANDROID_RAM_CONSOLE_ERROR_CORRECTION

config ANDROID_RAM_CONSOLE_ERROR_CORRECTION_DATA_SIZE
	int "Android RAM Console Data data size"
	default 128
	help
	  Must be a power of 2.

config ANDROID_RAM_CONSOLE_ERROR_CORRECTION_ECC_SIZE
	int "Android RAM Console ECC size"
	default 16

config ANDROID_RAM_CONSOLE_ERROR_CORRECTION_SYMBOL_SIZE
	int "Android RAM Console Symbol size"
	default 8

config ANDROID_RAM_CONSOLE_ERROR_CORRECTION_POLYNOMIAL
	hex "Android RAM Console Polynomial"
	default 0x19 if (ANDROID_RAM_CONSOLE_ERROR_CORRECTION_SYMBOL_SIZE = 4)
	default 0x29 if (ANDROID_RAM_CONSOLE_ERROR_CORRECTION_SYMBOL_SIZE = 5)
	default 0x61 if (ANDROID_RAM_CONSOLE_ERROR_CORRECTION_SYMBOL_SIZE = 6)
	default 0x89 if (ANDROID_RAM_CONSOLE_ERROR_CORRECTION_SYMBOL_SIZE = 7)
	default 0x11d if (ANDROID_RAM_CONSOLE_ERROR_CORRECTION_SYMBOL_SIZE = 8)

endif # ANDROID_RAM_CONSOLE_ERROR_CORRECTION

config ANDROID_RAM_CONSOLE_EARLY_INIT
	bool "Start Android RAM console early"
	default n
	depends on ANDROID_RAM_CONSOLE

config ANDROID_RAM_CONSOLE_EARLY_ADDR
	hex "Android RAM console virtual address"
	default 0
	depends on ANDROID_RAM_CONSOLE_EARLY_INIT

config ANDROID_RAM_CONSOLE_EARLY_SIZE
	hex "Android RAM console buffer size"
	default 0
	depends on ANDROID_RAM_CONSOLE_EARLY_INIT

config ANDROID_TIMED_OUTPUT
	bool "Timed output class driver"
	default y

config ANDROID_TIMED_GPIO
	tristate "Android timed gpio driver"
	depends on GENERIC_GPIO && ANDROID_TIMED_OUTPUT
	default n

config ANDROID_LOW_MEMORY_KILLER
	bool "Android Low Memory Killer"
	default N
	---help---
	  Register processes to be killed when memory is low

config ANDROID_LOW_MEMORY_KILLER_AUTODETECT_OOM_ADJ_VALUES
	bool "Android Low Memory Killer: detect oom_adj values"
	depends on ANDROID_LOW_MEMORY_KILLER
	default y
	---help---
	  Detect oom_adj values written to
	  /sys/module/lowmemorykiller/parameters/adj and convert them
	  to oom_score_adj values.

config ANDROID_LMK_ADJ_RBTREE
	bool "Use RBTREE for Android Low Memory Killer"
	depends on ANDROID_LOW_MEMORY_KILLER
	default y
	---help---
	  Use oom_score_adj rbtree to select the best proecss to kill
	  when system in low memory status.
	 
config LMK_LOCK_TREBUCHET
 	bool "Lock Trebuchet in memory"
 	depends on ANDROID_LOW_MEMORY_KILLER
 	default n
 	---help---
 	  Lock Trebuchet launcher in memory and protect it from killing by LowMemoryKiller.
	  Launcher is a part of Android UI. Unloading launcher from memory is unwanted for user experience. 
	  Better don't kill it. This option locks Trebuchet in memory at runtime and protect it from killing by LowMemoryKiller.

config LMK_LOCK_NOVA
 	bool "Lock Nova Launcher in memory"
 	depends on ANDROID_LOW_MEMORY_KILLER
 	default n
 	---help---
 	  Lock Nova Launcher in memory and protect it from killing by LowMemoryKiller.
	  Launcher is a part of Android UI. Unloading launcher from memory is unwanted for user experience. 
	  Better don't kill it. This option locks Nova Launcher in memory at runtime and protect it from killing by LowMemoryKiller.

 	  Nova is the highly customizable, performance driven, home screen replacement.
  	  Accept no substitutes! Nova Launcher is the top launcher for modern Android, embracing full Material Design throughout.
 	  Nova Launcher replaces your home screen with one you control and can customize. Change icons, layouts, animations and more.

config LMK_LOCK_GMS
 	bool "Lock Google Play Services in memory"
 	depends on ANDROID_LOW_MEMORY_KILLER
 	default n
 	---help---
 	  Google Play Services is a framework, which provides Google Services API for applications and MUST stay background.
	  At the same time GMS is a huge application, which utilize ~20M memory at runtime, but very heavy to launch/restart for legacy devices.
	  Better don't kill it. This option locks Google Play Services in memory at runtime and protect it from killing by LowMemoryKiller.


endif # if ANDROID

endmenu
